{"version":3,"sources":["Components/Header/Header.module.css","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/HOCs/SuspenceHOC.jsx","App.js","serviceWorker.js","Redux/commentsReducer.js","Redux/Redux.js","index.js","Redux/cartReducer.js","API/api.js","Redux/catalogReducer.js","Common/preloader/preloader.jsx","assets/preloader.gif"],"names":["module","exports","Header","props","className","style","maincontainer","linkdiv","to","link","cart","length","connect","state","SuspenceHOC","Component","fallback","Catalog","React","lazy","Cart","App","exact","path","render","Boolean","window","location","hostname","match","initialState","comments","name","comment","commentsReducer","action","type","data","require","combineReducers","createStore","applyMiddleware","store","form","formReducer","users","usersReducer","cartReducer","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","id","email","slice","findIndex","item","concat","addToCart","removeFromCart","clearCart","instance","default","create","baseURL","ItemsAPI","get","response","loading","inputvalue","sortItems","sort","a","b","method","value","searchFor","ItemsTHUNK","dispatch","setTimeout","Preloader","display","width","height","alignItems","justifyContent","src","preloader","alt"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,cAAgB,gC,oHCqBjFC,EAlBA,SAACC,GACd,OACE,yBAAKC,UAAWC,IAAMC,eACpB,yBAAKF,UAAWC,IAAME,SACpB,kBAAC,IAAD,CAASC,GAAG,IAAIJ,UAAWC,IAAMI,MAAjC,YAIF,yBAAKL,UAAWC,IAAME,SACpB,kBAAC,IAAD,CAASC,GAAG,QAAQJ,UAAWC,IAAMI,MAArC,OAEyB,IAAtBN,EAAMO,KAAKC,QAAgB,mCAASR,EAAMO,KAAKC,OAApB,S,QCAvBC,eAJS,SAACC,GACvB,MAAO,CAAEH,KAAMG,EAAMH,KAAKA,QAGbE,EAXS,SAACT,GACvB,OACE,6BACE,kBAAC,EAAD,CAAQO,KAAMP,EAAMO,W,eCOXI,EAXK,SAACC,GAQnB,OAP2B,SAACZ,GAC1B,OACE,kBAAC,WAAD,CAAUa,SAAU,kBAAC,IAAD,OAClB,kBAACD,EAAcZ,MCAjBc,EAAUC,IAAMC,MAAK,kBAAM,8DAC3BC,EAAOF,IAAMC,MAAK,kBAAM,8DAYfE,MAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQV,EAAYG,KAC1C,kBAAC,IAAD,CAAOM,KAAK,QAAQC,OAAQV,EAAYM,OCH1BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BChBFC,EAAe,CACjBC,SAAU,CACR,CAAEC,KAAM,OAAQC,QAAS,yBACzB,CAAED,KAAM,WAAYC,QAAS,8BAelBC,EAXS,WAAmC,IAAlCrB,EAAiC,uDAAzBiB,EAAcK,EAAW,uCACxD,OAAQA,EAAOC,MACb,IAXgB,cAYd,OAAO,2BAAKvB,GAAZ,IAAmBkB,SAAS,GAAD,mBAAMlB,EAAMkB,UAAZ,CAAsBI,EAAOE,SAG1D,QACE,OAAOxB,I,0BCX6CyB,EAAQ,IAA1DC,E,EAAAA,gBAAiBC,E,EAAAA,YAAaC,E,EAAAA,gBAOlCC,EAAQF,EANGD,EAAgB,CAC7BI,KAAMC,IACNb,SAAUG,EACVW,MAAOC,IACPpC,KAAMqC,MAE0BN,EAAgBO,MAClDtB,OAAOgB,MAAQA,EACAA,QCLfO,IAASzB,OAEP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUkB,MAAOA,GACf,kBAAC,EAAD,QAGJQ,SAASC,eAAe,SHmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,yJIrIxB/B,EAAe,CACjBpB,KAAM,CACJ,CAAEoD,GAAI,GAAI9B,KAAM,OAAQ+B,MAAO,WAC/B,CAAED,GAAI,GAAI9B,KAAM,OAAQ+B,MAAO,aA+BpBhB,IA3BK,WAAmC,IAAlClC,EAAiC,uDAAzBiB,EAAcK,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAbgB,cAcd,OAAO,2BAAKvB,GAAZ,IAAmBH,KAAK,GAAD,mBAAMG,EAAMH,MAAZ,CAAkByB,EAAOE,SAClD,IAbe,aAcb,OAAO,2BAAKxB,GAAZ,IAAmBH,KAAM,KAC3B,IAhBqB,mBAiBnB,OAAO,2BACFG,GADL,IAEEH,KAAK,YACAG,EAAMH,KACNsD,MACC,EACAnD,EAAMH,KAAKuD,WAAU,SAACC,GAAD,OAAUA,EAAKJ,KAAO3B,EAAO2B,OAEnDK,OACCtD,EAAMH,KAAKsD,MACTnD,EAAMH,KAAKuD,WAAU,SAACC,GAAD,OAAUA,EAAKJ,KAAO3B,EAAO2B,MAAM,OAKpE,QACE,OAAOjD,IAMN,IAAMuD,EAAY,SAAC/B,GACxB,MAAO,CAAED,KAzCS,cAyCUC,SAGjBgC,EAAiB,SAACP,GAC7B,MAAO,CAAE1B,KA5Cc,mBA4CU0B,OAEtBQ,EAAY,WACvB,MAAO,CAAElC,KA9CQ,gB,yJCAfmC,EAFuBjC,EAAQ,IAA3BkC,QAEaC,OAAO,CAC1BC,QAAS,0CAGEC,EAAW,WAEpB,OAAOJ,EAASK,IAAI,SAASrB,MAAK,SAACsB,GAAD,OAAcA,EAASxC,SCDzDP,EAAe,CACjBe,MAAO,GACPiC,SAAS,EACTC,WAAY,IAoDDC,GAVElC,IAvCM,WAAmC,IAAlCjC,EAAiC,uDAAzBiB,EAAcK,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAbc,YAcZ,OAAO,2BAAKvB,GAAZ,IAAmBgC,MAAM,YAAKV,EAAOU,SAEvC,IAfe,aAgBb,OAAO,2BAAKhC,GAAZ,IAAmBiE,SAAUjE,EAAMiE,UACrC,IAhBe,aAiBb,OAAO,2BACFjE,GADL,IAEEgC,MAAM,YACDhC,EAAMgC,MAAMoC,MAAK,SAACC,EAAGC,GACtB,OAAQhD,EAAOiD,QACb,IAAK,OACL,IAAK,QACH,GAAIF,EAAE/C,EAAOiD,QAAUD,EAAEhD,EAAOiD,QAAS,OAAO,EAChD,GAAIF,EAAE/C,EAAOiD,UAAYD,EAAEhD,EAAOiD,QAAS,OAAO,EAClD,GAAIF,EAAE/C,EAAOiD,QAAUD,EAAEhD,EAAOiD,QAAS,OAAQ,EACnD,IAAK,OACH,OAAOF,EAAEpB,GAAKqB,EAAErB,GAClB,IAAK,SACH,OAAOqB,EAAErB,GAAKoB,EAAEpB,GAClB,QACE,OAAOjD,SASnB,IAxCe,aAyCb,OAAO,2BAAKA,GAAZ,IAAmBkE,WAAY5C,EAAOkD,QACxC,QACE,OAAOxE,IAcY,SAACuE,GACxB,MAAO,CAAEhD,KA3DQ,aA2DUgD,YAGhBE,EAAY,SAACD,GACxB,MAAO,CAAEjD,KA9DQ,aA8DUiD,UAGhBE,EAAa,WACxB,OAAO,SAACC,GACNA,EAbK,CAAEpD,KAxDQ,eAsEfqD,YACE,kBACEd,IAAoBpB,MAAK,SAACsB,GACxBW,EArBD,CAAEpD,KArDO,YAqDUS,MAqBAgC,IAClBW,EAlBD,CAAEpD,KAxDQ,oBA4Eb,Q,gCC/EN,qCAmBesD,IAhBG,SAACvF,GACjB,OACE,yBACEE,MAAO,CACLsF,QAAS,OACTC,MAAO,OACPC,OAAQ,OACRC,WAAY,SACZC,eAAgB,WAGlB,yBAAKH,MAAM,MAAMI,IAAKC,IAAWC,IAAI,Q,mBCd3ClG,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.9b449e3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__1ZTUG\",\"linkdiv\":\"Header_linkdiv__2fGSs\",\"maincontainer\":\"Header_maincontainer__oWdy3\"};","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport style from \"./Header.module.css\"\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className={style.maincontainer}>\r\n      <div className={style.linkdiv}>\r\n        <NavLink to='/' className={style.link}>\r\n          Catalog\r\n        </NavLink>\r\n      </div>\r\n      <div className={style.linkdiv}>\r\n        <NavLink to='/card' className={style.link}>\r\n          Card\r\n          {props.cart.length !== 0 && <span> ({props.cart.length})</span>}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport Header from \"./Header\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst HeaderContainer = (props) => {\r\n  return (\r\n    <div>\r\n      <Header cart={props.cart} />\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { cart: state.cart.cart }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)\r\n","import React, { Suspense } from \"react\"\r\nimport Preloader from \"../../Common/preloader/preloader\"\r\n\r\nconst SuspenceHOC = (Component) => {\r\n  const containerComponent = (props) => {\r\n    return (\r\n      <Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    )\r\n  }\r\n  return containerComponent\r\n}\r\n\r\nexport default SuspenceHOC\r\n","import React from \"react\"\nimport \"./App.css\"\nimport HeaderContainer from \"./Components/Header/HeaderContainer\"\nimport { Route } from \"react-router-dom\"\nimport SuspenceHOC from \"./Components/HOCs/SuspenceHOC\"\n\n\nconst Catalog = React.lazy(() => import(\"./Components/Catalog/Catalog\"))\nconst Cart = React.lazy(() => import(\"./Components/Cart/Cart\"))\n\nfunction App() {\n  return (\n    <div>\n      <HeaderContainer />\n      <Route exact path='/' render={SuspenceHOC(Catalog)} />\n      <Route path=\"/card\" render={SuspenceHOC(Cart)} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const NEW_COMMENT = \"NEW_COMMENT\"\r\n\r\nlet initialState = {\r\n  comments: [\r\n    { name: \"Ivan\", comment: \"this is a greate site\" },\r\n    { name: \"Not Ivan\", comment: \"you should hire this guy\" },\r\n  ],\r\n}\r\n\r\nconst commentsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_COMMENT: {\r\n      return { ...state, comments: [...state.comments, action.data] }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default commentsReducer\r\n\r\nexport const CommentsAC = (data) => {\r\n  return { type: NEW_COMMENT, data: { name: data.name, comment: data.comment } }\r\n}\r\n","import { reducer as formReducer } from \"redux-form\"\r\nimport commentsReducer from \"./commentsReducer\"\r\nimport usersReducer from \"./catalogReducer\"\r\nimport thunk from \"redux-thunk\"\r\nimport cartReducer from \"./cartReducer\"\r\nconst { combineReducers, createStore, applyMiddleware } = require(\"redux\")\r\nlet reducers = combineReducers({\r\n  form: formReducer,\r\n  comments: commentsReducer,\r\n  users: usersReducer,\r\n  cart: cartReducer,\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\nwindow.store = store\r\nexport default store\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Redux\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, //{\" \"}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const ADD_TO_CART = \"ADD_TO_CART\"\r\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\"\r\nconst CLEAR_CART = \"CLEAR_CART\"\r\n\r\nlet initialState = {\r\n  cart: [\r\n    { id: 88, name: \"oleg\", email: \"petuhov\" },\r\n    { id: 99, name: \"Iban\", email: \"kolopov\" },\r\n  ],\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return { ...state, cart: [...state.cart, action.data] }\r\n    case CLEAR_CART:\r\n      return { ...state, cart: [] }\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: [\r\n          ...state.cart\r\n            .slice(\r\n              0,\r\n              state.cart.findIndex((item) => item.id === action.id)\r\n            )\r\n            .concat(\r\n              state.cart.slice(\r\n                state.cart.findIndex((item) => item.id === action.id) + 1\r\n              )\r\n            ),\r\n        ],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default cartReducer\r\n\r\nexport const addToCart = (data) => {\r\n  return { type: ADD_TO_CART, data }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n  return { type: REMOVE_FROM_CART, id }\r\n}\r\nexport const clearCart = () => {\r\n  return { type: CLEAR_CART }\r\n}\r\n","const { default: Axios } = require(\"axios\")\r\n\r\nlet instance = Axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n})\r\n\r\nexport const ItemsAPI = {\r\n  getItems() {\r\n    return instance.get(\"users\").then((response) => response.data)\r\n  },\r\n}\r\n","import { ItemsAPI } from \"../API/api\"\r\n\r\nconst GET_USERS = \"GET_USERS\"\r\nconst IS_LOADING = \"IS_LOADING\"\r\nconst SORT_ITEMS = \"SORT_ITEMS\"\r\nconst SEARCH_FOR = \"SEARCH_FOR\"\r\n\r\nlet initialState = {\r\n  users: [],\r\n  loading: false,\r\n  inputvalue: \"\",\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS: {\r\n      return { ...state, users: [...action.users] }\r\n    }\r\n    case IS_LOADING:\r\n      return { ...state, loading: !state.loading }\r\n    case SORT_ITEMS:\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users.sort((a, b) => {\r\n            switch (action.method) {\r\n              case \"name\":\r\n              case \"email\":\r\n                if (a[action.method] > b[action.method]) return 1\r\n                if (a[action.method] === b[action.method]) return 0\r\n                if (a[action.method] < b[action.method]) return -1\r\n              case \"idUp\":\r\n                return a.id - b.id\r\n              case \"idDown\":\r\n                return b.id - a.id\r\n              default:\r\n                return state\r\n            }\r\n            //if (a[action.method] > b[action.method]) return 1\r\n            // if (a[action.method] == b[action.method]) return 0\r\n            // if (a[action.method] < b[action.method]) return -1\r\n            //return b[action.method] - a[action.method]\r\n          }),\r\n        ],\r\n      }\r\n    case SEARCH_FOR:\r\n      return { ...state, inputvalue: action.value }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n\r\nexport const setUsers = (users) => {\r\n  return { type: GET_USERS, users }\r\n}\r\n\r\nexport const isLoading = () => {\r\n  return { type: IS_LOADING }\r\n}\r\n\r\nexport const sortItems = (method) => {\r\n  return { type: SORT_ITEMS, method }\r\n}\r\n\r\nexport const searchFor = (value) => {\r\n  return { type: SEARCH_FOR, value }\r\n}\r\n\r\nexport const ItemsTHUNK = () => {\r\n  return (dispatch) => {\r\n    dispatch(isLoading())\r\n    setTimeout(\r\n      () =>\r\n        ItemsAPI.getItems().then((response) => {\r\n          dispatch(setUsers(response))\r\n          dispatch(isLoading())\r\n        }),\r\n      200\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport preloader from \"../../assets/preloader.gif\"\r\n\r\nconst Preloader = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <img width='50%' src={preloader} alt='' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.4cc848b5.gif\";"],"sourceRoot":""}