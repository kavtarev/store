{"version":3,"sources":["assets/cardimg.jpg","Components/Cart/Cart.module.css","Common/forms/forms.module.css","Components/Cart/Cart.Item.jsx","Common/validators/validators.js","Common/forms/forms.jsx","Common/UserSubmitForm.jsx","Common/modal/modal.jsx","Components/Cart/Cart.jsx"],"names":["module","exports","CartItem","id","name","email","number","addToCart","removeFromCart","className","style","cartItem","data","width","height","src","card","alt","buttons","Button","margin","variant","onClick","required","value","undefined","InputForm","input","props","meta","inputsDiv","TextAreaForm","areaDiv","visited","error","reduxForm","form","onSubmit","handleSubmit","Field","component","type","placeholder","validate","handleClose","ButtonModalOrder","useState","show","setShow","Modal","onHide","size","Header","closeButton","Title","total","Body","clearCart","alert","connect","state","cart","tempobj","item","tmpArray","reduce","initial","current","length","textAlign","main","filter","indexOf","push","itemCheck","sort","a","b","map","i","key","costDiv","costSpan","costOrder"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,SAAW,uBAAuB,KAAO,mBAAmB,QAAU,sBAAsB,KAAO,mBAAmB,QAAU,sBAAsB,SAAW,yB,oBCAnLD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,yB,2ICiDlDC,EA3CE,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eACtD,OACE,yBAAKC,UAAWC,IAAMC,UACpB,yBAAKF,UAAWC,IAAME,MACpB,yBAAKF,MAAO,CAAEG,MAAO,OAAQC,OAAQ,QAAUC,IAAKC,IAAMC,IAAI,SAC9D,6BACE,2BACGb,EADH,IACUC,GAET,KAJH,MAIW,2BAAIC,GACZ,OAGH,6BACG,IADH,yDAEgB,+BAAKH,GAAQ,KAE7B,6BACE,qHACmB,2BAAIA,EAAKG,MAIhC,yBAAKG,UAAWC,IAAMQ,SACpB,kBAACC,EAAA,EAAD,CACET,MAAO,CAAEU,OAAQ,UACjBC,QAAQ,UACRC,QAAS,kBAAMf,EAAU,CAAEJ,KAAIC,OAAMC,YAHvC,oDAOA,kBAACc,EAAA,EAAD,CACET,MAAO,CAAEU,OAAQ,UACjBC,QAAQ,SACRC,QAAS,kBAAMd,EAAeL,KAHhC,2C,oCCtCGoB,EAAW,SAACC,GACrB,OAAOA,OAAQC,EAAY,Y,2BCEhBC,EAAY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAgBC,GAAY,EAArBC,KAAqB,iCACtD,OACA,yBAAKpB,UAAWC,IAAMoB,WAGlB,yCAAOP,UAAU,GAASI,EAAWC,MAO9BG,EAAe,SAAC,GAA+B,IAA7BJ,EAA4B,EAA5BA,MAAOE,EAAqB,EAArBA,KAASD,EAAY,gCACzD,OACE,yBAAKnB,UAAWC,IAAMsB,SACpB,8CAAcL,EAAWC,IACxBC,EAAKI,SAAW,6BAAMJ,EAAKK,SCsDnBC,cAAU,CAAEC,KAAM,eAAlBD,EA9DQ,SAACP,GACtB,OACE,0BAAMS,SAAUT,EAAMU,cAEpB,6BACE,gFACA,6BACE,kBAACC,EAAA,EAAD,CACEnC,KAAK,YACLoC,UAAWd,EACXe,KAAK,OACLC,YAAY,aACZC,SAAU,CAACpB,OAKjB,6BACE,wCACA,6BACE,kBAACgB,EAAA,EAAD,CACEnC,KAAK,QACLoC,UAAWd,EACXe,KAAK,QACLC,YAAY,QACZC,SAAU,CAACpB,OAIjB,6BACE,uJACA,6BACE,kBAACgB,EAAA,EAAD,CACEnC,KAAK,QACLoC,UAAWd,EACXe,KAAK,QACLC,YAAY,QACZC,SAAU,CAACpB,OAIjB,6BACE,qIACA,6BACE,kBAACgB,EAAA,EAAD,CACEnC,KAAK,WACLoC,UAAWT,EACXU,KAAK,QACLC,YAAY,eAKxB,kBAACvB,EAAA,EAAD,CAAQE,QAAQ,YAAYC,QAASM,EAAMgB,aAA3C,wCAGU,kBAACzB,EAAA,EAAD,CAAQsB,KAAK,SAASpB,QAAQ,WAA9B,wDChCKwB,EA5BU,SAACjB,GAAW,IAAD,EACVkB,oBAAS,GADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAE5BJ,EAAc,kBAAMI,GAAQ,IAGlC,OACE,oCACE,kBAAC7B,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAJX,kBAAM0B,GAAQ,KAI7B,oDAGA,kBAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OAAQN,EAAaO,KAAK,MAC3C,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,mFAA6B1B,EAAM2B,QAErC,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAAC,EAAD,CACEnB,SAAU,SAACb,GACTI,EAAM6B,YACNC,MAAM,2FAERd,YAAaA,QCqCVe,uBAJS,SAACC,GACvB,MAAO,CAAEC,KAAMD,EAAMC,KAAKA,QAGY,CACtCtD,cACAC,mBACAiD,eAHaE,EAvDF,SAAC/B,GACZ,IADsB,EAClBkC,EAAU,GADQ,cAELlC,EAAMiC,MAFD,IAEtB,2BAA6B,CAAC,IAArBE,EAAoB,QAC3BD,EAAQC,EAAK5D,KAAO2D,EAAQC,EAAK5D,KAAO,GAAK,GAHzB,8BAKtB,IAAI6D,EAAW,GAUf,IAAIT,EAAQ3B,EAAMiC,KAAKI,QAAO,SAACC,EAASC,GAAV,OAAsBD,EAAUC,EAAQhE,KAAI,GAE1E,OAA6B,IAAtByB,EAAMiC,KAAKO,OAChB,wBAAI1D,MAAO,CAAE2D,UAAW,WAAxB,sGAEA,yBAAK5D,UAAWC,IAAM4D,MACpB,oGACC1C,EAAMiC,KACJU,QAAO,SAACR,GAAD,OAhBd,SAAmBA,GACjB,OAAmC,IAA/BC,EAASQ,QAAQT,EAAK5D,MACxB6D,EAASS,KAAKV,EAAK5D,KACZ,GAaauE,CAAUX,MAC3BY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzE,GAAK0E,EAAE1E,MACxB2E,KAAI,SAACf,EAAMgB,GAAP,OACH,kBAAC,EAAD,CACEC,IAAKD,EACL5E,GAAI4D,EAAK5D,GACTG,OAAQwD,EAAQC,EAAK5D,IACrBC,KAAM2D,EAAK3D,KACXC,MAAO0D,EAAK1D,MACZE,UAAWqB,EAAMrB,UACjBC,eAAgBoB,EAAMpB,oBAG3BoB,EAAMiC,MACL,yBAAKpD,UAAWC,IAAMuE,SACpB,yBAAKxE,UAAWC,IAAMwE,UACnB,IADH,oCAEU,2BAAI3B,GAAW,KAEzB,yBAAK9C,UAAWC,IAAMyE,WACpB,kBAAC,EAAD,CAAkB1B,UAAW7B,EAAM6B,UAAWF,MAAOA","file":"static/js/7.468e9df5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cardimg.c55b828a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartItem\":\"Cart_cartItem__2gn8U\",\"data\":\"Cart_data__2Vi20\",\"buttons\":\"Cart_buttons__3ZvVH\",\"main\":\"Cart_main__1_HYh\",\"costDiv\":\"Cart_costDiv__2rX3x\",\"costSpan\":\"Cart_costSpan__1ir36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputsDiv\":\"forms_inputsDiv__3H8nx\",\"areaDiv\":\"forms_areaDiv__-R4pb\"};","import React from \"react\"\r\nimport style from \"./Cart.module.css\"\r\nimport card from \"../../assets/cardimg.jpg\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nconst CartItem = ({ id, name, email, number, addToCart, removeFromCart }) => {\r\n  return (\r\n    <div className={style.cartItem}>\r\n      <div className={style.data}>\r\n        <img style={{ width: \"20px\", height: \"20px\" }} src={card} alt='card' />\r\n        <div>\r\n          <b>\r\n            {name} {email}\r\n          </b>\r\n          {\"  \"} x <b>{number}</b>\r\n          {\"   \"}\r\n        </div>\r\n\r\n        <div>\r\n          {\" \"}\r\n          Цена за 1 шт: <b>${id}</b>{\" \"}\r\n        </div>\r\n        <div>\r\n          <u>\r\n            Общая стоимость: <b>{id * number}</b>\r\n          </u>\r\n        </div>\r\n      </div>\r\n      <div className={style.buttons}>\r\n        <Button\r\n          style={{ margin: \"0.5rem\" }}\r\n          variant='success'\r\n          onClick={() => addToCart({ id, name, email })}\r\n        >\r\n          Добавить\r\n        </Button>\r\n        <Button\r\n          style={{ margin: \"0.5rem\" }}\r\n          variant='danger'\r\n          onClick={() => removeFromCart(id)}\r\n        >\r\n          Убрать\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartItem\r\n","export let required = (value) => {\r\n  return value ? undefined : \"required\"\r\n}\r\n","import React from \"react\"\r\nimport style from \"./forms.module.css\"\r\n\r\nexport const InputForm = ({ input, meta, ...props }) => {\r\n  return (\r\n  <div className={style.inputsDiv}>\r\n   \r\n      \r\n      <input required={true}{...input} {...props}  />\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport const TextAreaForm = ({ input, meta, ...props }) => {\r\n  return (\r\n    <div className={style.areaDiv}>\r\n      <textarea {...input} {...props} />\r\n      {meta.visited && <div>{meta.error}</div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { required } from \"./validators/validators\"\r\nimport { InputForm, TextAreaForm } from \"./forms/forms\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\n\r\n\r\n\r\nconst UserSubmitForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n     \r\n      <div>\r\n        <label> Ваше имя </label>\r\n        <div>\r\n          <Field\r\n            name=\"firstName\"\r\n            component={InputForm}\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n            validate={[required]}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Email</label>\r\n        <div>\r\n          <Field\r\n            name=\"email\"\r\n            component={InputForm}\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            validate={[required]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label>Номер вашего телефона</label>\r\n        <div>\r\n          <Field\r\n            name=\"phone\"\r\n            component={InputForm}\r\n            type=\"phone\"\r\n            placeholder=\"phone\"\r\n            validate={[required]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label>Пожелания к заказу</label>\r\n        <div>\r\n          <Field\r\n            name=\"requests\"\r\n            component={TextAreaForm}\r\n            type=\"email\"\r\n            placeholder=\"Requests\"\r\n          />\r\n        </div>\r\n      </div>\r\n  \r\n<Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Отмена\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"primary\">Заказать</Button>\r\n      \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: \"SubmitOrder\" })(UserSubmitForm)\r\n","import React, { useState } from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport UserSubmitForm from \"../UserSubmitForm\"\r\n\r\nconst ButtonModalOrder = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  return (\r\n    <>\r\n      <Button variant='primary' onClick={handleShow}>\r\n        Оформить\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose} size='lg'>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Заказ на сумму {props.total}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <UserSubmitForm\r\n            onSubmit={(value) => {\r\n              props.clearCart()\r\n              alert(\"ваш заказ принят\")\r\n            }}\r\n            handleClose={handleClose}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ButtonModalOrder\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { addToCart, removeFromCart, clearCart } from \"../../Redux/cartReducer\"\r\nimport CartItem from \"./Cart.Item\"\r\nimport style from \"./Cart.module.css\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport ButtonModalOrder from \"../../Common/modal/modal\"\r\n\r\nconst Cart = (props) => {\r\n  let tempobj = {}\r\n  for (let item of props.cart) {\r\n    tempobj[item.id] = (tempobj[item.id] || 0) + 1\r\n  }\r\n  let tmpArray = []\r\n\r\n  function itemCheck(item) {\r\n    if (tmpArray.indexOf(item.id) === -1) {\r\n      tmpArray.push(item.id)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  let total = props.cart.reduce((initial, current) => initial + current.id, 0)\r\n\r\n  return props.cart.length === 0 ? (\r\n    <h2 style={{ textAlign: \"center\" }}>Ваша корзина пуста</h2>\r\n  ) : (\r\n    <div className={style.main}>\r\n      <h2>Ваша корзина:</h2>\r\n      {props.cart\r\n        .filter((item) => itemCheck(item))\r\n        .sort((a, b) => a.id - b.id)\r\n        .map((item, i) => (\r\n          <CartItem\r\n            key={i}\r\n            id={item.id}\r\n            number={tempobj[item.id]}\r\n            name={item.name}\r\n            email={item.email}\r\n            addToCart={props.addToCart}\r\n            removeFromCart={props.removeFromCart}\r\n          />\r\n        ))}\r\n      {props.cart && (\r\n        <div className={style.costDiv}>\r\n          <div className={style.costSpan}>\r\n            {\" \"}\r\n            Сумма: $<b>{total}</b>{\" \"}\r\n          </div>\r\n          <div className={style.costOrder}>\r\n            <ButtonModalOrder clearCart={props.clearCart} total={total} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { cart: state.cart.cart }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  addToCart,\r\n  removeFromCart,\r\n  clearCart,\r\n})(Cart)\r\n"],"sourceRoot":""}